{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/devinnarula/Desktop/Symptom-Checker-Site/symptom-checker/src/components/Chatbox.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Chatbox.css';\n\nclass Chatbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Message: 'Hello, welcome to SymptoBot.',\n      Typed: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      Typed: event.target.value\n    });\n  }\n\n  async componentDidMount() {\n    var options = {\n      url: 'https://api.infermedica.com/v2/diagnosis',\n      method: 'POST',\n      headers: {\n        'App-Id': 'aa2fb846',\n        'App-Key': '',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sex: \"male\",\n        age: {\n          \"value\": 30\n        },\n        evidence: [{\n          \"id\": \"s_1193\",\n          \"choice_id\": \"present\",\n          \"source\": \"initial\"\n        }, {\n          \"id\": \"s_488\",\n          \"choice_id\": \"present\"\n        }, {\n          \"id\": \"s_418\",\n          \"choice_id\": \"present\"\n        }]\n      })\n    };\n    await axios.request(options).then(function (response) {\n      console.log(response.data);\n      console.log('hi');\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Chatbox-Title\",\n        children: \"SymptoBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chatbox-Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chatbox-Message\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Chatbox-MessageText\",\n            children: this.state.Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"Contact-Form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Chatbox-Type\",\n            type: \"text\",\n            value: this.state.Typed,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"Chatbox-Type\",\n            value: this.state.Typed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Users/devinnarula/Desktop/Symptom-Checker-Site/symptom-checker/src/components/Chatbox.js"],"names":["React","Component","axios","Chatbox","constructor","props","state","Message","Typed","handleChange","bind","event","setState","target","value","componentDidMount","options","url","method","headers","body","JSON","stringify","sex","age","evidence","request","then","response","console","log","data","catch","error","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,8BADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd;AACH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAIC,OAAO,GAAG;AACVC,MAAAA,GAAG,EAAE,0CADK;AAEVC,MAAAA,MAAM,EAAE,MAFE;AAGVC,MAAAA,OAAO,EAAE;AACL,kBAAU,UADL;AAEL,mBAAW,EAFN;AAGL,wBAAgB;AAHX,OAHC;AAQVC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,GAAG,EAAE,MADY;AAEjBC,QAAAA,GAAG,EAAE;AACH,mBAAS;AADN,SAFY;AAKjBC,QAAAA,QAAQ,EAAE,CACN;AACE,gBAAM,QADR;AAEE,uBAAa,SAFf;AAGE,oBAAU;AAHZ,SADM,EAMN;AACE,gBAAM,OADR;AAEE,uBAAa;AAFf,SANM,EAUN;AACE,gBAAM,OADR;AAEE,uBAAa;AAFf,SAVM;AALO,OAAf;AARI,KAAd;AA+BE,UAAMvB,KAAK,CAACwB,OAAN,CAAcV,OAAd,EAAuBW,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAHK,EAGHE,KAHG,CAGG,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACH,KALK,CAAN;AAML;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,sBAAqC,KAAK5B,KAAL,CAAWC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAA9D;AAAqE,YAAA,QAAQ,EAAE,KAAKC;AAApF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,SAAS,EAAC,cAApB;AAAmC,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AApE2B;;AAuEhC,eAAeL,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport './Chatbox.css';\n\nclass Chatbox extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            Message: 'Hello, welcome to SymptoBot.',\n            Typed: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({Typed: event.target.value});\n    }\n\n    async componentDidMount() {\n        var options = {\n            url: 'https://api.infermedica.com/v2/diagnosis',\n            method: 'POST',\n            headers: {\n                'App-Id': 'aa2fb846',\n                'App-Key': '',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                sex: \"male\",\n                age: {\n                  \"value\": 30\n                },\n                evidence: [\n                    {\n                      \"id\": \"s_1193\",\n                      \"choice_id\": \"present\",\n                      \"source\": \"initial\"\n                    },\n                    {\n                      \"id\": \"s_488\",\n                      \"choice_id\": \"present\"\n                    },\n                    {\n                      \"id\": \"s_418\",\n                      \"choice_id\": \"present\"\n                    }\n                ]\n            })\n          };\n\n          await axios.request(options).then(function (response) {\n              console.log(response.data);\n              console.log('hi')\n          }).catch(function (error) {\n              console.error(error);\n          });\n    }\n    render() {\n        return (\n            <div className='Chatbox'>\n                <h1 className='Chatbox-Title'>SymptoBot</h1>\n                <div className='Chatbox-Content'>\n                <div className='Chatbox-Message'>\n                    <h1 className='Chatbox-MessageText'>{this.state.Message}</h1>\n                </div>\n                <form className=\"Contact-Form\">\n                    <input className=\"Chatbox-Type\" type=\"text\" value={this.state.Typed} onChange={this.handleChange} />\n                    <textarea className=\"Chatbox-Type\" value={this.state.Typed} ></textarea>\n                 </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Chatbox;"]},"metadata":{},"sourceType":"module"}